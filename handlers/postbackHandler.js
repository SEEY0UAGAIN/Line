const { startRegistration, replyMessage, checkUserRights } = require('./messageHandler');
const { queryDB2 } = require('../db');

async function handlePostback(event) {
  const userId = event.source.userId;
  const data = event.postback.data;
  const replyToken = event.replyToken;

  if (data === 'action=register') {
    await startRegistration(userId, replyToken);
  } else if (data === 'action=check_status') {
    const rows = await queryDB2('SELECT * FROM line_registered_users WHERE line_user_id = ?', [userId]);
    if (rows.length > 0) {
      const idCard = rows[0].id_card;
      const userRights = await checkUserRights(idCard);
      const rightsMessage = userRights.length > 0 
        ? `üîë ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì: ${userRights.join(', ')}` 
        : '‚ö†Ô∏è ‡∏Ñ‡∏∏‡∏ì‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô';

      await replyMessage(replyToken, [
        { type: 'text', text: '‚úÖ ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡πÅ‡∏•‡πâ‡∏ß' },
        { type: 'text', text: rightsMessage }
      ]);
    } else {
      await replyMessage(replyToken, [{ type: 'text', text: '‚ùå ‡∏Ñ‡∏∏‡∏ì‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô' }]);
    }
  }
}

module.exports = { handlePostback };
